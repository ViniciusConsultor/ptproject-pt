<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="buttonItem1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMNSURBVEhLvVVJT1NRGOUn9CewNMQoMdCWNzeiCBhTgxujMYXSQoGWUmYZZIjiGIxxowvRHa4q
        Mo8PiVCgIAaLQBkeAjEkJrwEjQs3x+8BC4WUMogvOXlvce85557v++6LiDjCI6U26QiKlNakOwJN6K1i
        2luLaG2BmNZcfzwC1mav4JmEmNENwdoqHUpkOwY3uZ0Q09sh2HsgZPRCtHXSdyfEkiDEogCE9DaFcLCo
        pNQ3RNysco4hsO4AWM80+IIZGD0zMBBiPbMwFARhLJoD4xwFb+vYf1TkvIG394FxfYLeOYXTjgCibAGc
        IERlfsbJ7Gmccs0iOi+IM/lziClcAOfoB2/vCh8Vkddr5GzWMDh6c9Y2VUhvlSkCmbe1K3H2fsTkjG8R
        Fy1AX7oIY5kCpjQILqNb2bMWRC6JaU2UaTtEa3ODYG2J3rmBt3dGspl90JcQcfkSmFtfwJXPgcvzk0CP
        QogMKUI9rVBBZSIPuYhcmhnXCJhKIr45C9blAwnKbGavZU/3l90dsUQetlDksJ51+8E6BzViLyF87gfp
        YSKcIDQQQkdxEML/tvbYHLMZvZatIsoN//Q01C0Wre2kgjFI+X4wjv49u8TgHNYRZKPTF7o2NO463tZZ
        xWf2qKLHj3PVC0i8vwre7dMEQt41BueImaAaXCOhT0mTaqZRV4XcUUhlczhbvYSEO8tIvLeikatM1sBf
        zrYdW4hUFko+wuAaJYHR0O5penWbAsXTMFUsIr6GBOpWkPzwKxJqgzCVTNBQDcGYMygbc3yKqSKApEcK
        rjduQKqYgj7Xbw5bI4rHzGcPwFRJArVLuHB3BUkkkPx4DReffsOlZ+tIebmBq40/ccP7C9de/4C4ST62
        9xT/qczZu7xS0SRMVUsQa5Yh3l5F/IM1JD4hgecqrrz6jpQX6zhfNw+9y68Q+cEmmbN366gtVX3xPJiy
        Bcr/ncrkDKp84QdwBeMUkU+h/L2U9/5d78xO633GNYw4+luRQFXYbA+zQBsuJvu91kG7ruzD8O3ao10N
        rEOeOArZb58uyH9WWSLbAAAAAElFTkSuQmCC
</value>
  </data>
</root>